{"Base.SimdLoop.@simd":[{"Tuple{Any}":"    @simd\n\nAnnotate a `for` loop to allow the compiler to take extra liberties to allow loop re-ordering\n\n!!! warning\n    This feature is experimental and could change or disappear in future versions of Julia.\n    Incorrect use of the `@simd` macro may cause unexpected results.\n\nThe object iterated over in a `@simd for` loop should be a one-dimensional range.\nBy using `@simd`, you are asserting several properties of the loop:\n\n* It is safe to execute iterations in arbitrary or overlapping order, with special consideration for reduction variables.\n* Floating-point operations on reduction variables can be reordered, possibly causing different results than without `@simd`.\n\nIn many cases, Julia is able to automatically vectorize inner for loops without the use of `@simd`.\nUsing `@simd` gives the compiler a little extra leeway to make it possible in more situations. In\neither case, your inner loop should have the following properties to allow vectorization:\n\n* The loop must be an innermost loop\n* The loop body must be straight-line code. Therefore, [`@inbounds`](@ref) is\n    currently needed for all array accesses. The compiler can sometimes turn\n    short `&&`, `||`, and `?:` expressions into straight-line code if it is safe\n    to evaluate all operands unconditionally. Consider using the [`ifelse`](@ref)\n    function instead of `?:` in the loop if it is safe to do so.\n* Accesses must have a stride pattern and cannot be \"gathers\" (random-index\n    reads) or \"scatters\" (random-index writes).\n* The stride should be unit stride.\n\n!!! note\n    The `@simd` does not assert by default that the loop is completely free of loop-carried\n    memory dependencies, which is an assumption that can easily be violated in generic code.\n    If you are writing non-generic code, you can use `@simd ivdep for ... end` to also assert that:\n\n* There exists no loop-carried memory dependencies\n* No iteration ever waits on a previous iteration to make forward progress.\n"}]}